# -*- coding: utf-8 -*-
"""Indonesia to Chinese Translator

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Y-568Rip6sAVsIfJeobduryeLvqvH-cE
"""

import gradio as gr
from docx import Document
from transformers import AutoModelForSeq2SeqLM, AutoTokenizer
import torch
import re

# Load models
device = "cuda" if torch.cuda.is_available() else "cpu"
model_id_en = "Helsinki-NLP/opus-mt-id-en"
model_en = AutoModelForSeq2SeqLM.from_pretrained(model_id_en).to(device)
tokenizer_en = AutoTokenizer.from_pretrained(model_id_en)
model_id_zh = "Helsinki-NLP/opus-mt-en-zh"
model_zh = AutoModelForSeq2SeqLM.from_pretrained(model_id_zh).to(device)
tokenizer_zh = AutoTokenizer.from_pretrained(model_id_zh)

# Preprocessing function
def preprocess_text(text):
    text = re.sub(r'ï‚·', '', text)
    text = re.sub(r':', 'termasuk', text)
    return text

# Translation function
def translate_text(text):
    if not text.strip():
        return ""

    input_tokens_en = tokenizer_en(text, return_tensors="pt", padding=True, truncation=True).to(device)
    translated_tokens_en = model_en.generate(**input_tokens_en)
    sentence_en = tokenizer_en.decode(translated_tokens_en[0], skip_special_tokens=True)

    input_tokens_zh = tokenizer_zh(sentence_en, return_tensors="pt", padding=True, truncation=True).to(device)
    translated_tokens_zh = model_zh.generate(**input_tokens_zh)
    sentence_zh = tokenizer_zh.decode(translated_tokens_zh[0], skip_special_tokens=True)

    return re.sub(r'\s+', ' ', sentence_zh).strip()

# Document translation function
def translate_docx(file):
    doc = Document(file.name)
    for para in doc.paragraphs:
        if para.text.strip():
            processed_text = preprocess_text(para.text)
            translated_text = translate_text(processed_text)
            para.text = translated_text  # Replace Indonesian with Chinese

    output_path = "Translated_Chinese.docx"
    doc.save(output_path)
    return output_path

# Create Gradio interface
iface = gr.Interface(fn=translate_docx, inputs=gr.File(), outputs=gr.File(label="Download Translated DOCX"))

# Required for Hugging Face Spaces
if __name__ == "__main__":
    iface.launch(server_name="0.0.0.0", server_port=7860)